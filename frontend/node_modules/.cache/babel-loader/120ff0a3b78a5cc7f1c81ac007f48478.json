{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/src/pages/Detail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Chart from '../components/Chart';\nimport ChartData from '../components/ChartData';\nimport { coinGecko } from '../api/axios';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Detail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [coinInfo, setCoinInfo] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  let urlPath = `coins/${id}/market_chart`;\n\n  const formatData = data => {\n    return data.map(el => {\n      return {\n        t: el[0],\n        y: el[1].toFixed(2)\n      };\n    });\n  };\n\n  const transformData = data => {\n    let plotData = [];\n    let x = [];\n    let y = [];\n    data.map(each => {\n      x.push(each.t);\n      y.push(each.y);\n    });\n    plotData['x'] = x;\n    plotData['y'] = y;\n    return plotData;\n  };\n\n  useEffect(() => {\n    async function getData() {\n      const [day, month, year, detail] = await axios.all([coinGecko.get(urlPath, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"1\"\n        }\n      }), coinGecko.get(urlPath, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"30\"\n        }\n      }), coinGecko.get(urlPath, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"365\"\n        }\n      }), coinGecko.get('/coins/markets/', {\n        params: {\n          vs_currency: \"usd\",\n          ids: id\n        }\n      })]);\n      setCoinInfo({\n        day: formatData(day.data.prices),\n        month: formatData(month.data.prices),\n        year: formatData(year.data.prices),\n        detail: detail.data[0]\n      });\n      setIsLoading(!isLoading);\n    }\n\n    getData();\n  }, [urlPath]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Plot, {\n        data: [{\n          type: 'scatter',\n          mode: 'lines',\n          x: transformData(coinInfo.day)['x'],\n          y: transformData(coinInfo.day)['y'],\n          marker: {\n            color: '#ed022d'\n          }\n        }],\n        layout: {\n          width: 1000,\n          height: 500,\n          title: 'covid'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Detail, \"NX0SyhKhAk7VJKINiTAvRaurhYQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Detail;\nexport default Detail;\n{\n  /* <Chart data={coinInfo}/>\n                     <ChartData data={coinInfo}/> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/src/pages/Detail.js"],"names":["React","useEffect","useState","useParams","Chart","ChartData","coinGecko","axios","Detail","id","coinInfo","setCoinInfo","isLoading","setIsLoading","urlPath","formatData","data","map","el","t","y","toFixed","transformData","plotData","x","each","push","getData","day","month","year","detail","all","get","params","vs_currency","days","ids","prices","type","mode","marker","color","width","height","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Chart from '../components/Chart';\nimport ChartData from '../components/ChartData';\nimport { coinGecko } from '../api/axios';\nimport axios from 'axios';\n\nconst Detail = () => {\n    const { id } = useParams()\n    const [ coinInfo, setCoinInfo ] = useState({})\n    const [ isLoading, setIsLoading ] = useState(true)\n\n    let urlPath = `coins/${id}/market_chart`\n\n    const formatData = (data) => {\n        return data.map(el => {\n            return {\n                t: el[0],\n                y: el[1].toFixed(2)\n            }\n        })\n    }\n\n    const transformData = (data) => {\n        let plotData = []\n        let x = []\n        let y = []\n\n        data.map(each => {\n            x.push(each.t)\n            y.push(each.y)\n        })\n        plotData['x'] = x;\n        plotData['y'] = y;\n\n        return plotData\n    }\n\n    useEffect(() => {\n        async function getData() {\n            \n            const [ day, month, year, detail ] = await axios.all([\n                coinGecko.get(urlPath, {\n                    params: {\n                        vs_currency: \"usd\",\n                        days: \"1\",\n                    }\n                }),\n                coinGecko.get(urlPath, {\n                    params: {\n                        vs_currency: \"usd\",\n                        days: \"30\",\n                    }\n                }),\n                coinGecko.get(urlPath, {\n                    params: {\n                        vs_currency: \"usd\",\n                        days: \"365\"\n                    }\n                }),\n                coinGecko.get('/coins/markets/', { params: { vs_currency: \"usd\", ids: id}})\n            ])\n\n            \n            \n            setCoinInfo({ \n                day: formatData(day.data.prices), \n                month: formatData(month.data.prices), \n                year: formatData(year.data.prices),\n                detail: detail.data[0]\n            });\n            setIsLoading(!isLoading)\n        }\n        getData()\n    }, [urlPath])\n\n    return (\n        <div>\n            {isLoading ? (\n                <>\n                    <h1>Loading...</h1>\n                </>\n            ) : (\n                <>\n                    <Plot data={[\n                        {\n                            type: 'scatter',\n                            mode: 'lines',\n                            x: transformData(coinInfo.day)['x'],\n                            y: transformData(coinInfo.day)['y'],\n                            marker: { color: '#ed022d'},\n                        }\n                    ]}\n                        layout = {{width: 1000, height: 500, title: 'covid'}}\n                    />\n                </>\n            )} \n        </div>\n    )\n}\n\nexport default Detail\n\n\n{/* <Chart data={coinInfo}/>\n                    <ChartData data={coinInfo}/> */}"]},"metadata":{},"sourceType":"module"}