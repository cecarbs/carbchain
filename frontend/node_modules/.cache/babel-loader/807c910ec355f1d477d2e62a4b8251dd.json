{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/src/pages/Detail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Chart from '../components/Chart';\nimport ChartData from '../components/ChartData';\nimport { coinGecko } from '../api/axios';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Detail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [coinInfo, setCoinInfo] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  let urlPath = `coins/${id}/market_chart`;\n\n  const formatData = data => {\n    return data.map(el => {\n      return {\n        t: el[0],\n        y: el[1]\n      };\n    });\n  };\n\n  useEffect(() => {\n    async function getData() {\n      const [day, week, month, year, detail] = await axios.all([coinGecko.get(urlPath, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"1\"\n        }\n      }), coinGecko.get(urlPath, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"7\"\n        }\n      }), coinGecko.get(urlPath, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"30\"\n        }\n      }), coinGecko.get(urlPath, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"365\"\n        }\n      }), coinGecko.get('/coins/markets/', {\n        params: {\n          vs_currency: \"usd\",\n          ids: id\n        }\n      })]);\n      setCoinInfo({\n        day: formatData(day.data.prices),\n        week: formatData(week.data.prices),\n        month: formatData(month.data.prices),\n        year: formatData(year.data.prices),\n        detail: detail.data[0]\n      });\n      setIsLoading(!isLoading);\n    }\n\n    getData();\n  }, [urlPath]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ChartData, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Detail, \"NX0SyhKhAk7VJKINiTAvRaurhYQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/src/pages/Detail.js"],"names":["React","useEffect","useState","useParams","Chart","ChartData","coinGecko","axios","Detail","id","coinInfo","setCoinInfo","isLoading","setIsLoading","urlPath","formatData","data","map","el","t","y","getData","day","week","month","year","detail","all","get","params","vs_currency","days","ids","prices"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Chart from '../components/Chart';\nimport ChartData from '../components/ChartData';\nimport { coinGecko } from '../api/axios';\nimport axios from 'axios';\n\nconst Detail = () => {\n    const { id } = useParams()\n    const [ coinInfo, setCoinInfo ] = useState({})\n    const [ isLoading, setIsLoading ] = useState(true)\n\n    let urlPath = `coins/${id}/market_chart`\n    const formatData = (data) => {\n        return data.map(el => {\n            return {\n                t: el[0],\n                y: el[1]\n            }\n        })\n    }\n    useEffect(() => {\n        async function getData() {\n            const [ day, week, month, year, detail ] = await axios.all([\n                coinGecko.get(urlPath, {\n                    params: {\n                        vs_currency: \"usd\",\n                        days: \"1\",\n                    }\n                }),\n                coinGecko.get(urlPath, {\n                    params: {\n                        vs_currency: \"usd\",\n                        days: \"7\",\n                    }\n                }),\n                coinGecko.get(urlPath, {\n                    params: {\n                        vs_currency: \"usd\",\n                        days: \"30\",\n                    }\n                }),\n                coinGecko.get(urlPath, {\n                    params: {\n                        vs_currency: \"usd\",\n                        days: \"365\"\n                    }\n                }),\n                coinGecko.get('/coins/markets/', { params: { vs_currency: \"usd\", ids: id}})\n            ])\n            setCoinInfo({ \n                day: formatData(day.data.prices), \n                week: formatData(week.data.prices),\n                month: formatData(month.data.prices), \n                year: formatData(year.data.prices),\n                detail: detail.data[0]\n            });\n            setIsLoading(!isLoading)\n        }\n        getData()\n    }, [urlPath])\n\n    return (\n        <div>\n            {isLoading ? (\n                <>\n                    <h1>Loading...</h1>\n                </>\n            ) : (\n                <>\n                    <Chart />\n                    <ChartData />\n                </>\n            )} \n        </div>\n    )\n}\n\nexport default Detail\n"]},"metadata":{},"sourceType":"module"}