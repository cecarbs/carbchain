{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/frontend/src/pages/TransactionPool.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { axiosInstance } from '../api/axios';\nimport Transaction from '../components/blockchain/Transactions';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionPool = () => {\n  _s();\n\n  const [transactionPool, setTransactionPool] = useState([]);\n  let history = useHistory();\n\n  async function getData() {\n    try {\n      let {\n        data\n      } = await axiosInstance.get('transactions/');\n      setTransactionPool(data);\n      console.log('worked');\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n    const id = setInterval(getData, 10000);\n    return () => clearInterval(id);\n  }, []);\n\n  const mineHandler = async () => {\n    let response = await axiosInstance.get('blockchain/mine/');\n\n    if (response.status == 200) {\n      history.push('/blockchain');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TransactionContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transaction Pool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transactions\",\n      children: transactionPool === null || transactionPool === void 0 ? void 0 : transactionPool.map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n        transaction_data: transaction.transaction_data,\n        metadata: transaction.metadata\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mineHandler,\n      children: \"Mine Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionPool, \"1HLXkEKfocED7iSRdFaeJuffXHs=\", false, function () {\n  return [useHistory];\n});\n\n_c = TransactionPool;\nexport default TransactionPool;\nconst TransactionContainer = styled.div`\n    /* background-color: red; */\n    padding: 0.5rem calc((100vw - 1200px) / 2);\n    \n    h1 {\n        margin-top: 3rem;\n        margin-bottom: 3rem;\n    }\n    \n    .transactions {\n        border-top: 1px solid gray;\n    }\n\n    button {\n        margin-top: 3rem;\n        background-color: #0b3531;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        padding: 1r\n\n    }\n`;\n_c2 = TransactionContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TransactionPool\");\n$RefreshReg$(_c2, \"TransactionContainer\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/frontend/src/pages/TransactionPool.js"],"names":["React","useState","useEffect","axiosInstance","Transaction","useHistory","styled","TransactionPool","transactionPool","setTransactionPool","history","getData","data","get","console","log","error","id","setInterval","clearInterval","mineHandler","response","status","push","map","transaction","transaction_data","metadata","TransactionContainer","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;AACA,MAAIS,OAAO,GAAGL,UAAU,EAAxB;;AAEA,iBAAeM,OAAf,GAAyB;AACrB,QAAI;AACA,UAAI;AAAEC,QAAAA;AAAF,UAAW,MAAMT,aAAa,CAACU,GAAd,CAAkB,eAAlB,CAArB;AACAJ,MAAAA,kBAAkB,CAACG,IAAD,CAAlB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,KAJD,CAIE,OAAOC,KAAP,EAAc;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACJ;;AACDd,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO;AAEP,UAAMM,EAAE,GAAGC,WAAW,CAACP,OAAD,EAAU,KAAV,CAAtB;AAEA,WAAO,MAAMQ,aAAa,CAACF,EAAD,CAA1B;AACH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,WAAW,GAAG,YAAY;AAC5B,QAAIC,QAAQ,GAAG,MAAMlB,aAAa,CAACU,GAAd,CAAkB,kBAAlB,CAArB;;AACA,QAAIQ,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACxBZ,MAAAA,OAAO,CAACa,IAAR,CAAa,aAAb;AACH;AACJ,GALD;;AAOA,sBACI,QAAC,oBAAD;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAEKf,eAFL,aAEKA,eAFL,uBAEKA,eAAe,CAAEgB,GAAjB,CAAsBC,WAAD,iBAClB,QAAC,WAAD;AAAa,QAAA,gBAAgB,EAAEA,WAAW,CAACC,gBAA3C;AAA6D,QAAA,QAAQ,EAAED,WAAW,CAACE;AAAnF;AAAA;AAAA;AAAA;AAAA,cADH;AAFL;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI;AAAQ,MAAA,OAAO,EAAEP,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAzCD;;GAAMb,e;UAEYF,U;;;KAFZE,e;AA2CN,eAAeA,eAAf;AAEA,MAAMqB,oBAAoB,GAAGtB,MAAM,CAACuB,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;MAAMD,oB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { axiosInstance } from '../api/axios'\nimport Transaction from '../components/blockchain/Transactions'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst TransactionPool = () => {\n    const [transactionPool, setTransactionPool] = useState([])\n    let history = useHistory()\n\n    async function getData() {\n        try {\n            let { data } = await axiosInstance.get('transactions/')\n            setTransactionPool(data)\n            console.log('worked')\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    useEffect(() => {\n        getData()\n\n        const id = setInterval(getData, 10000)\n\n        return () => clearInterval(id)\n    }, [])\n\n    const mineHandler = async () => {\n        let response = await axiosInstance.get('blockchain/mine/')\n        if (response.status == 200) {\n            history.push('/blockchain')\n        }\n    }\n\n    return (\n        <TransactionContainer>\n            {/* <pre>{JSON.stringify(transactionPool, null, 2)}</pre> */}\n            <h1>Transaction Pool</h1>\n            <div className=\"transactions\">\n\n                {transactionPool?.map((transaction) => (\n                    <Transaction transaction_data={transaction.transaction_data} metadata={transaction.metadata} />\n                ))}\n            </div>\n            <button onClick={mineHandler}>Mine Transactions</button>\n        </TransactionContainer>\n    )\n}\n\nexport default TransactionPool\n\nconst TransactionContainer = styled.div`\n    /* background-color: red; */\n    padding: 0.5rem calc((100vw - 1200px) / 2);\n    \n    h1 {\n        margin-top: 3rem;\n        margin-bottom: 3rem;\n    }\n    \n    .transactions {\n        border-top: 1px solid gray;\n    }\n\n    button {\n        margin-top: 3rem;\n        background-color: #0b3531;\n        color: white;\n        border: none;\n        border-radius: 4px;\n        padding: 1r\n\n    }\n`\n"]},"metadata":{},"sourceType":"module"}