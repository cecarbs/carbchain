{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/src/components/PlotData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Plot from 'react-plotly.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PlotData = ({\n  data\n}) => {\n  _s();\n\n  const [timespan, setTimespan] = useState(\"24\");\n  const {\n    day,\n    month,\n    year,\n    detail\n  } = data;\n\n  const timeViewHandler = () => {\n    switch (timespan) {\n      case \"24h\":\n        return day;\n\n      case \"30d\":\n        return month;\n\n      case \"1y\":\n        return year;\n\n      default:\n        return day;\n    }\n  };\n\n  const transformData = data => {\n    let plotData = [];\n    let x = [];\n    let y = [];\n    data.map(each => {\n      let test = new Date(each.t).toLocaleTimeString(\"en-US\");\n      x.push(test);\n      y.push(each.y);\n    });\n    plotData['x'] = x;\n    plotData['y'] = y;\n    return plotData;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Plot, {\n      data: [{\n        type: 'scatter',\n        mode: 'lines',\n        x: transformData(timeViewHandler())['x'],\n        y: transformData(timeViewHandler())['y'],\n        marker: {\n          color: '#ed022d'\n        }\n      }],\n      layout: {\n        width: 1000,\n        height: 500,\n        title: 'covid'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimespan(\"24h\"),\n        children: \"1 Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimespan(\"30d\"),\n        children: \"1 Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimespan(\"1y\"),\n        children: \"1 Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PlotData, \"+vzOPk1QVwQyRsNp1YO1BxRv95Q=\");\n\n_c = PlotData;\nexport default PlotData;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlotData\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/src/components/PlotData.js"],"names":["React","useState","Plot","PlotData","data","timespan","setTimespan","day","month","year","detail","timeViewHandler","transformData","plotData","x","y","map","each","test","Date","t","toLocaleTimeString","push","type","mode","marker","color","width","height","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAACM,IAAAA,GAAD;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA;AAAnB,MAA6BN,IAAnC;;AAEA,QAAMO,eAAe,GAAG,MAAM;AAC1B,YAAQN,QAAR;AACI,WAAK,KAAL;AACI,eAAOE,GAAP;;AACJ,WAAK,KAAL;AACI,eAAOC,KAAP;;AACJ,WAAK,IAAL;AACI,eAAOC,IAAP;;AACJ;AACI,eAAOF,GAAP;AARR;AAUH,GAXD;;AAaA,QAAMK,aAAa,GAAIR,IAAD,IAAU;AAC5B,QAAIS,QAAQ,GAAG,EAAf;AACA,QAAIC,CAAC,GAAG,EAAR;AACA,QAAIC,CAAC,GAAG,EAAR;AAEAX,IAAAA,IAAI,CAACY,GAAL,CAASC,IAAI,IAAI;AACb,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,CAAd,EAAiBC,kBAAjB,CAAoC,OAApC,CAAX;AACAP,MAAAA,CAAC,CAACQ,IAAF,CAAOJ,IAAP;AACAH,MAAAA,CAAC,CAACO,IAAF,CAAOL,IAAI,CAACF,CAAZ;AACH,KAJD;AAKAF,IAAAA,QAAQ,CAAC,GAAD,CAAR,GAAgBC,CAAhB;AACAD,IAAAA,QAAQ,CAAC,GAAD,CAAR,GAAgBE,CAAhB;AAEA,WAAOF,QAAP;AACH,GAdD;;AAgBA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE,CACA;AACIU,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,IAAI,EAAE,OAFV;AAGIV,QAAAA,CAAC,EAAEF,aAAa,CAACD,eAAe,EAAhB,CAAb,CAAiC,GAAjC,CAHP;AAIII,QAAAA,CAAC,EAAEH,aAAa,CAACD,eAAe,EAAhB,CAAb,CAAiC,GAAjC,CAJP;AAKIc,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AALZ,OADA,CAAZ;AASY,MAAA,MAAM,EAAI;AAACC,QAAAA,KAAK,EAAE,IAAR;AAAcC,QAAAA,MAAM,EAAE,GAAtB;AAA2BC,QAAAA,KAAK,EAAE;AAAlC;AATtB;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAMvB,WAAW,CAAC,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,IAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CArDD;;GAAMH,Q;;KAAAA,Q;AAuDN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport Plot from 'react-plotly.js';\n\nconst PlotData = ({data}) => {\n    const [timespan, setTimespan] = useState(\"24\")\n    const {day, month, year, detail} = data\n\n    const timeViewHandler = () => {\n        switch (timespan) {\n            case \"24h\":\n                return day;\n            case \"30d\":\n                return month;\n            case \"1y\":\n                return year;\n            default:\n                return day;\n        }\n    }\n\n    const transformData = (data) => {\n        let plotData = []\n        let x = []\n        let y = []\n\n        data.map(each => {\n            let test = new Date(each.t).toLocaleTimeString(\"en-US\")\n            x.push(test)\n            y.push(each.y)\n        })\n        plotData['x'] = x;\n        plotData['y'] = y;\n\n        return plotData\n    }\n\n    return (\n        <div>\n            <Plot data={[\n                        {\n                            type: 'scatter',\n                            mode: 'lines',\n                            x: transformData(timeViewHandler())['x'],\n                            y: transformData(timeViewHandler())['y'],\n                            marker: { color: '#ed022d'},\n                        }\n                    ]}\n                        layout = {{width: 1000, height: 500, title: 'covid'}}\n                    />\n            <div>\n                <button onClick={() => setTimespan(\"24h\")}>1 Day</button>\n                <button onClick={() => setTimespan(\"30d\")}>1 Month</button>\n                <button onClick={() => setTimespan(\"1y\")}>1 Year</button>\n            </div>\n        </div>\n    )\n}\n\nexport default PlotData\n"]},"metadata":{},"sourceType":"module"}