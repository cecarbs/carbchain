{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/src/components/ChartData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport Chartjs from 'chart.js/auto';\nimport { historyOptions } from '../chart/chartconfig'; // ChartJS.Chart.register.apply(\n//     null,\n//     Object.values(Chartjs).filter((chartClass) => chartClass.id)\n//   );\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartData = ({\n  data\n}) => {\n  _s();\n\n  const chartRef = useRef();\n  const {\n    day\n  } = data;\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const chartInstance = new Chartjs(chartRef.current, {\n        type: 'bar',\n        data: {\n          labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n          datasets: [{\n            label: '# of Votes',\n            data: [12, 19, 3, 5, 2, 3],\n            backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n            borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        } // type: 'scatter',\n        // data: {\n        //     // labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n        //     datasets: [{\n        //         label: '# of Votes',\n        //         data: day,\n        //         backgroundColor: \"rgba(174, 305, 194, 0.5)\",\n        //         borderColor: \"rgba(173, 305, 194, 0.4)\",\n        //         pointRadius: 0,\n        //     },]\n        // },\n        // options: historyOptions\n        // options: {\n        //     scales: {\n        //         y: {\n        //             beginAtZero: true\n        //         }\n        //     }\n        // }\n\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      id: \"chart\",\n      width: 250,\n      height: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChartData, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n\n_c = ChartData;\nexport default ChartData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartData\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/src/components/ChartData.js"],"names":["React","useRef","useEffect","Chartjs","historyOptions","ChartData","data","chartRef","day","current","chartInstance","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,cAAT,QAA+B,sBAA/B,C,CAEA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC1B,QAAMC,QAAQ,GAAGN,MAAM,EAAvB;AACA,QAAM;AAACO,IAAAA;AAAD,MAAQF,IAAd;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,QAAQ,IAAIA,QAAQ,CAACE,OAAzB,EAAkC;AAC9B,YAAMC,aAAa,GAAG,IAAIP,OAAJ,CAAYI,QAAQ,CAACE,OAArB,EAA8B;AAChDE,QAAAA,IAAI,EAAE,KAD0C;AAEhDL,QAAAA,IAAI,EAAE;AACFM,UAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,EAAmC,QAAnC,EAA6C,QAA7C,CADN;AAEFC,UAAAA,QAAQ,EAAE,CAAC;AACPC,YAAAA,KAAK,EAAE,YADA;AAEPR,YAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFC;AAGPS,YAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,YAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,YAAAA,WAAW,EAAE;AAnBN,WAAD;AAFR,SAF0C;AA0BhDC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE;AACJC,YAAAA,CAAC,EAAE;AACCC,cAAAA,WAAW,EAAE;AADd;AADC;AADH,SA1BuC,CAkChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApDgD,OAA9B,CAAtB;AAsDH;AACJ,GAzDQ,CAAT;AA0DA,sBACI;AAAA,2BACI;AAAQ,MAAA,GAAG,EAAEd,QAAb;AAAuB,MAAA,EAAE,EAAC,OAA1B;AAAkC,MAAA,KAAK,EAAE,GAAzC;AAA8C,MAAA,MAAM,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlED;;GAAMF,S;;KAAAA,S;AAoEN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport Chartjs from 'chart.js/auto';\nimport { historyOptions } from '../chart/chartconfig';\n\n// ChartJS.Chart.register.apply(\n//     null,\n//     Object.values(Chartjs).filter((chartClass) => chartClass.id)\n//   );\n\nconst ChartData = ({data}) => {\n    const chartRef = useRef()\n    const {day} = data\n    useEffect(() => {\n        if (chartRef && chartRef.current) {\n            const chartInstance = new Chartjs(chartRef.current, {\n                type: 'bar',\n                data: {\n                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n                    datasets: [{\n                        label: '# of Votes',\n                        data: [12, 19, 3, 5, 2, 3],\n                        backgroundColor: [\n                            'rgba(255, 99, 132, 0.2)',\n                            'rgba(54, 162, 235, 0.2)',\n                            'rgba(255, 206, 86, 0.2)',\n                            'rgba(75, 192, 192, 0.2)',\n                            'rgba(153, 102, 255, 0.2)',\n                            'rgba(255, 159, 64, 0.2)'\n                        ],\n                        borderColor: [\n                            'rgba(255, 99, 132, 1)',\n                            'rgba(54, 162, 235, 1)',\n                            'rgba(255, 206, 86, 1)',\n                            'rgba(75, 192, 192, 1)',\n                            'rgba(153, 102, 255, 1)',\n                            'rgba(255, 159, 64, 1)'\n                        ],\n                        borderWidth: 1\n                    }]\n                },\n                options: {\n                    scales: {\n                        y: {\n                            beginAtZero: true\n                        }\n                    }\n                }\n\n                // type: 'scatter',\n                // data: {\n                //     // labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n                //     datasets: [{\n                //         label: '# of Votes',\n                //         data: day,\n                //         backgroundColor: \"rgba(174, 305, 194, 0.5)\",\n                //         borderColor: \"rgba(173, 305, 194, 0.4)\",\n                //         pointRadius: 0,\n                //     },]\n                // },\n                // options: historyOptions\n                // options: {\n                //     scales: {\n                //         y: {\n                //             beginAtZero: true\n                //         }\n                //     }\n                // }\n            })\n        }\n    })\n    return (\n        <div>\n            <canvas ref={chartRef} id=\"chart\" width={250} height={250}></canvas>\n        </div>\n    )\n}\n\nexport default ChartData\n"]},"metadata":{},"sourceType":"module"}