{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/frontend/src/contextAPI/UserContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(null);\nconst MyContext = /*#__PURE__*/createContext(null);\nexport const MyProvider = ({\n  children\n}) => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [coins, setCoins] = useState([]);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      userContext: [user, setUser],\n      coinsContext: [coins, setCoins]\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyProvider, \"UD85SCcs7M8wlARaUK2jkeFFYdk=\");\n\n_c = MyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/frontend/src/contextAPI/UserContext.js"],"names":["React","createContext","useState","UserContext","MyContext","MyProvider","children","user","setUser","coins","setCoins","userContext","coinsContext"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC,IAAD,CAAjC;AAEP,MAAMG,SAAS,gBAAGH,aAAa,CAAC,IAAD,CAA/B;AAEA,OAAO,MAAMI,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBACI,QAAC,SAAD,CAAW,QAAX;AACI,IAAA,KAAK,EAAE;AAAES,MAAAA,WAAW,EAAE,CAACJ,IAAD,EAAOC,OAAP,CAAf;AAAgCI,MAAAA,YAAY,EAAE,CAACH,KAAD,EAAQC,QAAR;AAA9C,KADX;AAAA,cAGKJ;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAXM;;GAAMD,U;;KAAAA,U","sourcesContent":["import React, { createContext, useState } from 'react'\n\nexport const UserContext = createContext(null)\n\nconst MyContext = createContext(null)\n\nexport const MyProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [coins, setCoins] = useState([]);\n\n    return (\n        <MyContext.Provider\n            value={{ userContext: [user, setUser], coinsContext: [coins, setCoins] }}\n        >\n            {children}\n        </MyContext.Provider>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}