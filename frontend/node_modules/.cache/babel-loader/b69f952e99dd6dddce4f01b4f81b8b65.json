{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/frontend/src/pages/SendCoin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { axiosInstance } from '../api/axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SendCoin = () => {\n  _s();\n\n  const [isSent, setIsSent] = useState(false);\n  const [addresses, setAddresses] = useState([]);\n  let history = useHistory();\n  useEffect(() => {\n    async function getData() {\n      try {\n        let {\n          data\n        } = await axiosInstance.get('blockchain/addresses/');\n        setAddresses(data);\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getData();\n  }, []);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      let response = await axiosInstance.post('blockchain/transaction/', {\n        recipient: e.target[0].value,\n        amount: Number(e.target[1].value)\n      });\n\n      if (response.status === 200) {\n        history.push('/blockchain/transactions');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Addresses in CarbChain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), isSent && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Thank you!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SendCoin, \"dV+F8AmiwIn2L0s2knlmvsm/WB0=\", false, function () {\n  return [useHistory];\n});\n\n_c = SendCoin;\nexport default SendCoin;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendCoin\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/frontend/src/pages/SendCoin.js"],"names":["React","useState","useEffect","axiosInstance","useHistory","SendCoin","isSent","setIsSent","addresses","setAddresses","history","getData","data","get","console","log","error","submitHandler","e","preventDefault","response","post","recipient","target","value","amount","Number","status","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAIS,OAAO,GAAGN,UAAU,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeS,OAAf,GAAyB;AACrB,UAAI;AACA,YAAI;AAAEC,UAAAA;AAAF,YAAW,MAAMT,aAAa,CAACU,GAAd,CAAkB,uBAAlB,CAArB;AACAJ,QAAAA,YAAY,CAACG,IAAD,CAAZ;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,OAJD,CAIE,OAAOI,KAAP,EAAc;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACJ;;AACDL,IAAAA,OAAO;AACV,GAXQ,EAWN,EAXM,CAAT;;AAYA,QAAMM,aAAa,GAAG,MAAOC,CAAP,IAAa;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,UAAIC,QAAQ,GAAG,MAAMjB,aAAa,CAACkB,IAAd,CAAmB,yBAAnB,EAA8C;AAC/DC,QAAAA,SAAS,EAAEJ,CAAC,CAACK,MAAF,CAAS,CAAT,EAAYC,KADwC;AAE/DC,QAAAA,MAAM,EAAEC,MAAM,CAACR,CAAC,CAACK,MAAF,CAAS,CAAT,EAAYC,KAAb;AAFiD,OAA9C,CAArB;;AAIA,UAAIJ,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA6B;AACzBjB,QAAAA,OAAO,CAACkB,IAAR,CAAa,0BAAb;AACH;AAEJ,KATD,CASE,OAAOZ,KAAP,EAAc;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACJ,GAdD;;AAgBA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAM,MAAA,QAAQ,EAAEC,aAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAUKX,MAAM,iBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAjDD;;GAAMD,Q;UAGYD,U;;;KAHZC,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { axiosInstance } from '../api/axios'\nimport { useHistory } from 'react-router-dom'\n\nconst SendCoin = () => {\n    const [isSent, setIsSent] = useState(false)\n    const [addresses, setAddresses] = useState([])\n    let history = useHistory()\n\n    useEffect(() => {\n        async function getData() {\n            try {\n                let { data } = await axiosInstance.get('blockchain/addresses/')\n                setAddresses(data)\n                console.log(data)\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        getData()\n    }, [])\n    const submitHandler = async (e) => {\n        e.preventDefault()\n        try {\n            let response = await axiosInstance.post('blockchain/transaction/', {\n                recipient: e.target[0].value,\n                amount: Number(e.target[1].value)\n            })\n            if (response.status === 200) {\n                history.push('/blockchain/transactions')\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <h1>Addresses in CarbChain</h1>\n            </div>\n            {/* <pre>{JSON.stringify(addresses, null, 2)}</pre> */}\n            <form onSubmit={submitHandler}>\n                <input />\n                <input />\n                <button>Send</button>\n            </form>\n            {isSent && (\n                <h1>Thank you!</h1>\n            )}\n        </div>\n    )\n}\n\nexport default SendCoin\n"]},"metadata":{},"sourceType":"module"}