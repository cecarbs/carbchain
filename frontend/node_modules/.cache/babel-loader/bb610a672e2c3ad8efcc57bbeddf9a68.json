{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/frontend/src/components/crypto/CryptoData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { coinGecko } from '../../api/axios';\nimport Coin from './Coin';\nimport styled from 'styled-components';\nimport { MyContext } from '../../contextAPI/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoData = () => {\n  _s();\n\n  // const [coins, setCoins] = useState([])\n  const [search, setSearch] = useState(\"\");\n  const {\n    coins,\n    setCoins\n  } = useContext(MyContext);\n  useEffect(() => {\n    const getData = async () => {\n      let {\n        data\n      } = await coinGecko.get(\"/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\");\n      setCoins(data);\n    };\n\n    try {\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()));\n\n  const onChangeHandler = e => {\n    setSearch(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Search your currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"search\",\n          className: \"form__input\",\n          type: \"text\",\n          onChange: onChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), filteredCoins.map(coin => {\n      return /*#__PURE__*/_jsxDEV(Coin, {\n        id: coin.id,\n        name: coin.name,\n        image: coin.image,\n        symbol: coin.symbol,\n        volume: coin.market_cap,\n        price: coin.current_price,\n        priceChange: coin.price_change_percentage_24h\n      }, coin.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoData, \"OwWVkQ3PrIcEF9yocyMv4ll2fWQ=\");\n\n_c = CryptoData;\nexport default CryptoData;\nconst FormContainer = styled.div`\n  input {\n    border-radius: 4px;\n    border: 1px solid black;\n    height: 20px;\n    width: 10rem;\n    margin-bottom: 1rem;\n    \n    &:focus {\n      outline: none;\n    }\n  }\n`;\n_c2 = FormContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CryptoData\");\n$RefreshReg$(_c2, \"FormContainer\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/frontend/src/components/crypto/CryptoData.js"],"names":["React","useState","useEffect","useContext","coinGecko","Coin","styled","MyContext","CryptoData","search","setSearch","coins","setCoins","getData","data","get","error","console","log","filteredCoins","filter","coin","name","toLowerCase","includes","onChangeHandler","e","target","value","map","id","image","symbol","market_cap","current_price","price_change_percentage_24h","FormContainer","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,8BAA1B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAEU,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBT,UAAU,CAACI,SAAD,CAAtC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,OAAO,GAAG,YAAY;AAC1B,UAAI;AAAEC,QAAAA;AAAF,UAAW,MAAMV,SAAS,CAACW,GAAV,CAAc,0FAAd,CAArB;AACAH,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAHD;;AAIA,QAAI;AACFD,MAAAA,OAAO;AACR,KAFD,CAEE,OAAOG,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAVQ,EAUN,EAVM,CAAT;AAYA,QAAMG,aAAa,GAAGR,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCf,MAAM,CAACc,WAAP,EAAjC,CAArB,CAAtB;;AACA,QAAME,eAAe,GAAIC,CAAD,IAAO;AAC7BhB,IAAAA,SAAS,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAA,6BACE;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAC,aAA/B;AAA6C,UAAA,IAAI,EAAC,MAAlD;AAAyD,UAAA,QAAQ,EAAEH;AAAnE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAOGN,aAAa,CAACU,GAAd,CAAkBR,IAAI,IAAI;AACzB,0BACE,QAAC,IAAD;AACE,QAAA,EAAE,EAAEA,IAAI,CAACS,EADX;AAEE,QAAA,IAAI,EAAET,IAAI,CAACC,IAFb;AAGE,QAAA,KAAK,EAAED,IAAI,CAACU,KAHd;AAIE,QAAA,MAAM,EAAEV,IAAI,CAACW,MAJf;AAKE,QAAA,MAAM,EAAEX,IAAI,CAACY,UALf;AAME,QAAA,KAAK,EAAEZ,IAAI,CAACa,aANd;AAOE,QAAA,WAAW,EAAEb,IAAI,CAACc;AAPpB,SAAWd,IAAI,CAACS,EAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZA,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA7CD;;GAAMtB,U;;KAAAA,U;AA+CN,eAAeA,UAAf;AAGA,MAAM4B,aAAa,GAAG9B,MAAM,CAAC+B,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMD,a","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { coinGecko } from '../../api/axios';\nimport Coin from './Coin';\nimport styled from 'styled-components';\nimport { MyContext } from '../../contextAPI/UserContext';\n\nconst CryptoData = () => {\n  // const [coins, setCoins] = useState([])\n  const [search, setSearch] = useState(\"\")\n  const { coins, setCoins } = useContext(MyContext)\n\n  useEffect(() => {\n    const getData = async () => {\n      let { data } = await coinGecko.get(\"/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\")\n      setCoins(data)\n    }\n    try {\n      getData()\n    } catch (error) {\n      console.log(error)\n    }\n  }, [])\n\n  const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()))\n  const onChangeHandler = (e) => {\n    setSearch(e.target.value)\n  }\n\n  return (\n    <div>\n      <FormContainer>\n        <form class=\"form\">\n          <h1>Search your currency</h1>\n          <input name=\"search\" className=\"form__input\" type=\"text\" onChange={onChangeHandler}></input>\n        </form>\n      </FormContainer>\n      {filteredCoins.map(coin => {\n        return (\n          <Coin key={coin.id}\n            id={coin.id}\n            name={coin.name}\n            image={coin.image}\n            symbol={coin.symbol}\n            volume={coin.market_cap}\n            price={coin.current_price}\n            priceChange={coin.price_change_percentage_24h}\n          />\n        )\n      })}\n    </div>\n  )\n}\n\nexport default CryptoData\n\n\nconst FormContainer = styled.div`\n  input {\n    border-radius: 4px;\n    border: 1px solid black;\n    height: 20px;\n    width: 10rem;\n    margin-bottom: 1rem;\n    \n    &:focus {\n      outline: none;\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}