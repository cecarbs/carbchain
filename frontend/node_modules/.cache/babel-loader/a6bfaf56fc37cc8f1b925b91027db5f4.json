{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/frontend/src/components/blockchain/Carbchain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { axiosInstance } from '../../api/axios';\nimport Block from './Block';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Carbchain = () => {\n  _s();\n\n  const [blockchain, setBlockchain] = useState([]);\n  useEffect(() => {\n    try {\n      async function getData() {\n        let {\n          data\n        } = await axiosInstance.get('blockchain/');\n        setBlockchain(data);\n      }\n\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  console.log(blockchain);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(blockchain, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), blockchain.map((blockchain, i) => /*#__PURE__*/_jsxDEV(Block, {\n      id: i,\n      data: blockchain.data,\n      difficulty: blockchain.difficulty,\n      hash: blockchain.hash,\n      lastHash: blockchain.last_hash,\n      nonce: blockchain.nonce,\n      timestamp: blockchain.timestamp\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Carbchain, \"WdymaPxaM58a5STj8rIrArIjkfM=\");\n\n_c = Carbchain;\nexport default Carbchain;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carbchain\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/frontend/src/components/blockchain/Carbchain.js"],"names":["React","useEffect","useState","axiosInstance","Block","Carbchain","blockchain","setBlockchain","getData","data","get","error","console","log","JSON","stringify","map","i","difficulty","hash","last_hash","nonce","timestamp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI;AACA,qBAAeO,OAAf,GAAyB;AACrB,YAAI;AAAEC,UAAAA;AAAF,YAAW,MAAMN,aAAa,CAACO,GAAd,CAAkB,aAAlB,CAArB;AACAH,QAAAA,aAAa,CAACE,IAAD,CAAb;AACH;;AACDD,MAAAA,OAAO;AACV,KAND,CAME,OAAOG,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,GAXQ,EAWN,EAXM,CAAT;AAYAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,sBACI;AAAA,4BACI;AAAA,gBAAMQ,IAAI,CAACC,SAAL,CAAeT,UAAf,EAA2B,IAA3B,EAAiC,CAAjC;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKA,UAAU,CAACU,GAAX,CAAe,CAACV,UAAD,EAAaW,CAAb,kBACZ,QAAC,KAAD;AAEI,MAAA,EAAE,EAAEA,CAFR;AAGI,MAAA,IAAI,EAAEX,UAAU,CAACG,IAHrB;AAII,MAAA,UAAU,EAAEH,UAAU,CAACY,UAJ3B;AAKI,MAAA,IAAI,EAAEZ,UAAU,CAACa,IALrB;AAMI,MAAA,QAAQ,EAAEb,UAAU,CAACc,SANzB;AAOI,MAAA,KAAK,EAAEd,UAAU,CAACe,KAPtB;AAQI,MAAA,SAAS,EAAEf,UAAU,CAACgB;AAR1B,OACSL,CADT;AAAA;AAAA;AAAA;AAAA,YADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAhCD;;GAAMZ,S;;KAAAA,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { axiosInstance } from '../../api/axios'\nimport Block from './Block';\nconst Carbchain = () => {\n    const [blockchain, setBlockchain] = useState([])\n\n    useEffect(() => {\n        try {\n            async function getData() {\n                let { data } = await axiosInstance.get('blockchain/')\n                setBlockchain(data)\n            }\n            getData()\n        } catch (error) {\n            console.log(error)\n        }\n\n    }, [])\n    console.log(blockchain)\n    return (\n        <div>\n            <pre>{JSON.stringify(blockchain, null, 2)}</pre>\n            {blockchain.map((blockchain, i) => (\n                <Block\n                    key={i}\n                    id={i}\n                    data={blockchain.data}\n                    difficulty={blockchain.difficulty}\n                    hash={blockchain.hash}\n                    lastHash={blockchain.last_hash}\n                    nonce={blockchain.nonce}\n                    timestamp={blockchain.timestamp} />\n            ))}\n        </div>\n    )\n}\n\nexport default Carbchain\n"]},"metadata":{},"sourceType":"module"}