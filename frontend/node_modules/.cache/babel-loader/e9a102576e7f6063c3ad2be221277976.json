{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/frontend/src/components/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport CoinRow from './portfolio/CoinRow';\nimport { axiosInstance } from '../api/axios';\nimport { MyContext } from '../contextAPI/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Portfolio = () => {\n  _s();\n\n  const [holdings, setHoldings] = useState([]);\n  const {\n    user,\n    coins\n  } = useContext(MyContext);\n  const {\n    total,\n    setTotal\n  } = useState(null);\n  const {\n    query,\n    setQuery\n  } = useState(\"\"); // const myArrayFilter = coins.filter(coin => {\n  //     return holdings.some(holding => {\n  //         return holding.name === coin.name\n  //     })\n  // })\n\n  console.log(coins);\n  useEffect(() => {\n    async function getData() {\n      try {\n        let {\n          data\n        } = await axiosInstance.get(`/portfolio/`, {\n          params: {\n            id: 1\n          }\n        });\n        setHoldings(data);\n        data.forEach((e, i) => {\n          let str = yo;\n\n          if (i !== data.length - 1) {\n            console.log(e.name.toLowerCase());\n          }\n\n          return str;\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getData();\n  }, []); // const myArrayFilter = coins.filter(coin => {\n  //     return holdings.some(holding => {\n  //         return holding.name === coin.name\n  //     })\n  // })\n\n  const click = () => {};\n\n  const click2 = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: click,\n      children: \"Click m1e1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: click2,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Portfolio COmponent \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), holdings === null || holdings === void 0 ? void 0 : holdings.map((holding, i) => /*#__PURE__*/_jsxDEV(CoinRow, {\n      name: holding.name,\n      symbol: holding.symbol,\n      quantity: holding.quantity,\n      image: holding.image_url\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Portfolio, \"xJmWDXagnZI0DNTB8aQSopdtTeo=\");\n\n_c = Portfolio;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/frontend/src/components/Portfolio.js"],"names":["React","useEffect","useState","useContext","CoinRow","axiosInstance","MyContext","Portfolio","holdings","setHoldings","user","coins","total","setTotal","query","setQuery","console","log","getData","data","get","params","id","forEach","e","i","str","yo","length","name","toLowerCase","error","click","click2","map","holding","symbol","quantity","image_url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,QAA0B,2BAA1B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBR,UAAU,CAACG,SAAD,CAAlC;AACA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAAEY,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBb,QAAQ,CAAC,EAAD,CAApC,CAJoB,CAMpB;AACA;AACA;AACA;AACA;;AAIAc,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeiB,OAAf,GAAyB;AACrB,UAAI;AACA,YAAI;AAAEC,UAAAA;AAAF,YAAW,MAAMd,aAAa,CAACe,GAAd,CAAmB,aAAnB,EAAiC;AAClDC,UAAAA,MAAM,EAAE;AACJC,YAAAA,EAAE,EAAE;AADA;AAD0C,SAAjC,CAArB;AAKAb,QAAAA,WAAW,CAACU,IAAD,CAAX;AACAA,QAAAA,IAAI,CAACI,OAAL,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnB,cAAIC,GAAG,GAAGC,EAAV;;AACA,cAAIF,CAAC,KAAKN,IAAI,CAACS,MAAL,GAAc,CAAxB,EAA2B;AACvBZ,YAAAA,OAAO,CAACC,GAAR,CAAYO,CAAC,CAACK,IAAF,CAAOC,WAAP,EAAZ;AACH;;AACD,iBAAOJ,GAAP;AACH,SAND;AAOH,OAdD,CAcE,OAAOK,KAAP,EAAc;AACZf,QAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACH;AACJ;;AACDb,IAAAA,OAAO;AACV,GArBQ,EAqBN,EArBM,CAAT,CAfoB,CAsCpB;AACA;AACA;AACA;AACA;;AAEA,QAAMc,KAAK,GAAG,MAAM,CAEnB,CAFD;;AAIA,QAAMC,MAAM,GAAG,MAAM,CAGpB,CAHD;;AAOA,sBAEI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAA,gBAAKrB;AAAL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAMKJ,QANL,aAMKA,QANL,uBAMKA,QAAQ,CAAE0B,GAAV,CAAc,CAACC,OAAD,EAAUV,CAAV,kBACX,QAAC,OAAD;AAEI,MAAA,IAAI,EAAEU,OAAO,CAACN,IAFlB;AAGI,MAAA,MAAM,EAAEM,OAAO,CAACC,MAHpB;AAII,MAAA,QAAQ,EAAED,OAAO,CAACE,QAJtB;AAKI,MAAA,KAAK,EAAEF,OAAO,CAACG;AALnB,OACSb,CADT;AAAA;AAAA;AAAA;AAAA,YADH,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAoBH,CA3ED;;GAAMlB,S;;KAAAA,S;AA6EN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport CoinRow from './portfolio/CoinRow';\nimport { axiosInstance } from '../api/axios';\nimport { MyContext } from '../contextAPI/UserContext';\n\nconst Portfolio = () => {\n    const [holdings, setHoldings] = useState([])\n    const { user, coins } = useContext(MyContext)\n    const { total, setTotal } = useState(null)\n    const { query, setQuery } = useState(\"\")\n\n    // const myArrayFilter = coins.filter(coin => {\n    //     return holdings.some(holding => {\n    //         return holding.name === coin.name\n    //     })\n    // })\n\n\n\n    console.log(coins)\n    useEffect(() => {\n        async function getData() {\n            try {\n                let { data } = await axiosInstance.get(`/portfolio/`, {\n                    params: {\n                        id: 1\n                    }\n                })\n                setHoldings(data)\n                data.forEach((e, i) => {\n                    let str = yo\n                    if (i !== data.length - 1) {\n                        console.log(e.name.toLowerCase())\n                    }\n                    return str\n                })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        getData()\n    }, [])\n\n    // const myArrayFilter = coins.filter(coin => {\n    //     return holdings.some(holding => {\n    //         return holding.name === coin.name\n    //     })\n    // })\n\n    const click = () => {\n\n    }\n\n    const click2 = () => {\n\n\n    }\n\n\n\n    return (\n\n        <div>\n            <button onClick={click}>Click m1e1</button>\n            <button onClick={click2}>Click me</button>\n            {/* <pre>{JSON.stringify(holdings, null, 2)}</pre> */}\n            <h1>{total}</h1>\n            <h1>Portfolio COmponent </h1>\n            {holdings?.map((holding, i) => (\n                <CoinRow\n                    key={i}\n                    name={holding.name}\n                    symbol={holding.symbol}\n                    quantity={holding.quantity}\n                    image={holding.image_url}\n                />\n            ))}\n\n        </div >\n    )\n}\n\nexport default Portfolio\n"]},"metadata":{},"sourceType":"module"}