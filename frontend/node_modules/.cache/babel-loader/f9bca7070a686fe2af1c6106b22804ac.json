{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/frontend/src/components/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport CoinRow from './portfolio/CoinRow';\nimport { axiosInstance } from '../api/axios';\nimport { MyContext } from '../contextAPI/UserContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Portfolio = () => {\n  _s();\n\n  const [holdings, setHoldings] = useState([]);\n  const {\n    user,\n    coins\n  } = useContext(MyContext);\n  const [total, setTotal] = useState(null);\n  const [res, setRes] = useState(null);\n  const [mergedArr, setMergedArr] = useState(null);\n  const [display, setDisplay] = useState(false); // const myArrayFilter = coins.filter(coin => {\n  //     return holdings.some(holding => {\n  //         return holding.name === coin.name\n  //     })\n  // })\n\n  const createTotal = arr => {\n    let total = 0;\n    arr.map(el => total += el.quantity * el.current_price);\n    return total;\n  }; // console.log(coins)\n\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        let {\n          data\n        } = await axiosInstance.get(`/portfolio/`, {\n          params: {\n            id: 1\n          }\n        });\n        setHoldings(data);\n        let str = \"\";\n        data.map((e, i) => {\n          if (i !== data.length - 1) {\n            str += e.name.toLowerCase() + \"%2C%20\";\n          } else {\n            str += e.name.toLowerCase();\n          }\n        });\n        let res = await axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${str}`);\n        setRes(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getData();\n  }, []); // const myArrayFilter = coins.filter(coin => {\n  //     return holdings.some(holding => {\n  //         return holding.name === coin.name\n  //     })\n  // })\n\n  const click = () => {\n    console.log(res);\n    console.log(holdings);\n    const a3 = res.map(t1 => ({ ...t1,\n      ...holdings.find(t2 => t2.name === t1.name)\n    }));\n    setMergedArr(a3);\n    setDisplay(true);\n  };\n\n  const calculateSum = () => {\n    // const a3 = res.map(t1 => ({ ...t1, ...holdings.find(t2 => t2.name === t1.name) }))\n    // setMergedArr(a3)\n    let sum = mergedArr.reduce((a, b) => a + b.quantity * parseFloat(b.current_price), 0);\n    setTotal(sum.toFixed(2));\n  };\n\n  useEffect(() => {\n    if (display === false) {\n      console.log(mergedArr);\n      console.log('inside useeffect -- false');\n    }\n\n    if (display === true) {\n      console.log(mergedArr);\n      console.log('inside useeffect -- true');\n      calculateSum();\n    }\n  }, [mergedArr]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: holdings && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: click,\n        children: \"Click m1e1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: click2,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), total && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"$\", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Portfolio COmponent \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), holdings === null || holdings === void 0 ? void 0 : holdings.map((holding, i) => /*#__PURE__*/_jsxDEV(CoinRow, {\n        name: holding.name,\n        symbol: holding.symbol,\n        quantity: holding.quantity,\n        image: holding.image_url,\n        id: holding.id,\n        user_id: holding.user,\n        holdings: holdings,\n        setHoldings: setHoldings\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Portfolio, \"8bugPQ5nuaLYRjXQml5MUCD+bvA=\");\n\n_c = Portfolio;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/frontend/src/components/Portfolio.js"],"names":["React","useEffect","useState","useContext","CoinRow","axiosInstance","MyContext","axios","Portfolio","holdings","setHoldings","user","coins","total","setTotal","res","setRes","mergedArr","setMergedArr","display","setDisplay","createTotal","arr","map","el","quantity","current_price","getData","data","get","params","id","str","e","i","length","name","toLowerCase","error","console","log","click","a3","t1","find","t2","calculateSum","sum","reduce","a","b","parseFloat","toFixed","click2","holding","symbol","image_url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBT,UAAU,CAACG,SAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC,CANoB,CAOpB;AACA;AACA;AACA;AACA;;AAEA,QAAMmB,WAAW,GAAIC,GAAD,IAAS;AACzB,QAAIT,KAAK,GAAG,CAAZ;AACAS,IAAAA,GAAG,CAACC,GAAJ,CAASC,EAAD,IAASX,KAAK,IAAIW,EAAE,CAACC,QAAH,GAAcD,EAAE,CAACE,aAA3C;AACA,WAAOb,KAAP;AAEH,GALD,CAboB,CAoBpB;;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAe0B,OAAf,GAAyB;AACrB,UAAI;AACA,YAAI;AAAEC,UAAAA;AAAF,YAAW,MAAMvB,aAAa,CAACwB,GAAd,CAAmB,aAAnB,EAAiC;AAClDC,UAAAA,MAAM,EAAE;AACJC,YAAAA,EAAE,EAAE;AADA;AAD0C,SAAjC,CAArB;AAKArB,QAAAA,WAAW,CAACkB,IAAD,CAAX;AACA,YAAII,GAAG,GAAG,EAAV;AACAJ,QAAAA,IAAI,CAACL,GAAL,CAAS,CAACU,CAAD,EAAIC,CAAJ,KAAU;AACf,cAAIA,CAAC,KAAKN,IAAI,CAACO,MAAL,GAAc,CAAxB,EAA2B;AACvBH,YAAAA,GAAG,IAAIC,CAAC,CAACG,IAAF,CAAOC,WAAP,KAAuB,QAA9B;AACH,WAFD,MAEO;AACHL,YAAAA,GAAG,IAAIC,CAAC,CAACG,IAAF,CAAOC,WAAP,EAAP;AACH;AACJ,SAND;AAQA,YAAItB,GAAG,GAAG,MAAMR,KAAK,CAACsB,GAAN,CAAW,sEAAqEG,GAAI,EAApF,CAAhB;AAEAhB,QAAAA,MAAM,CAACD,GAAG,CAACa,IAAL,CAAN;AACH,OAnBD,CAmBE,OAAOU,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AACDX,IAAAA,OAAO;AACV,GA1BQ,EA0BN,EA1BM,CAAT,CArBoB,CAiDpB;AACA;AACA;AACA;AACA;;AAEA,QAAMc,KAAK,GAAG,MAAM;AAChBF,IAAAA,OAAO,CAACC,GAAR,CAAYzB,GAAZ;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAY/B,QAAZ;AACA,UAAMiC,EAAE,GAAG3B,GAAG,CAACQ,GAAJ,CAAQoB,EAAE,KAAK,EAAE,GAAGA,EAAL;AAAS,SAAGlC,QAAQ,CAACmC,IAAT,CAAcC,EAAE,IAAIA,EAAE,CAACT,IAAH,KAAYO,EAAE,CAACP,IAAnC;AAAZ,KAAL,CAAV,CAAX;AACAlB,IAAAA,YAAY,CAACwB,EAAD,CAAZ;AACAtB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACH,GAND;;AAQA,QAAM0B,YAAY,GAAG,MAAM;AACvB;AACA;AACA,QAAIC,GAAG,GAAG9B,SAAS,CAAC+B,MAAV,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAIC,CAAC,CAACzB,QAAF,GAAa0B,UAAU,CAACD,CAAC,CAACxB,aAAH,CAAvD,EAA2E,CAA3E,CAAV;AACAZ,IAAAA,QAAQ,CAACiC,GAAG,CAACK,OAAJ,CAAY,CAAZ,CAAD,CAAR;AACH,GALD;;AAOAnD,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIkB,OAAO,KAAK,KAAhB,EAAuB;AACnBoB,MAAAA,OAAO,CAACC,GAAR,CAAYvB,SAAZ;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH;;AAED,QAAIrB,OAAO,KAAK,IAAhB,EAAsB;AAClBoB,MAAAA,OAAO,CAACC,GAAR,CAAYvB,SAAZ;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAM,MAAAA,YAAY;AAEf;AACJ,GAbQ,EAaN,CAAC7B,SAAD,CAbM,CAAT;AAeA,sBACI;AAAA,cAEKR,QAAQ,iBAEL;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAEgC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEY,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAKQxC,KAAK,iBAAI;AAAA,wBAAMA,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cALjB,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,EASKJ,QATL,aASKA,QATL,uBASKA,QAAQ,CAAEc,GAAV,CAAc,CAAC+B,OAAD,EAAUpB,CAAV,kBACX,QAAC,OAAD;AAEI,QAAA,IAAI,EAAEoB,OAAO,CAAClB,IAFlB;AAGI,QAAA,MAAM,EAAEkB,OAAO,CAACC,MAHpB;AAII,QAAA,QAAQ,EAAED,OAAO,CAAC7B,QAJtB;AAKI,QAAA,KAAK,EAAE6B,OAAO,CAACE,SALnB;AAMI,QAAA,EAAE,EAAEF,OAAO,CAACvB,EANhB;AAOI,QAAA,OAAO,EAAEuB,OAAO,CAAC3C,IAPrB;AAQI,QAAA,QAAQ,EAAEF,QARd;AASI,QAAA,WAAW,EAAEC;AATjB,SACSwB,CADT;AAAA;AAAA;AAAA;AAAA,cADH,CATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR,mBADJ;AAgCH,CArHD;;GAAM1B,S;;KAAAA,S;AAuHN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport CoinRow from './portfolio/CoinRow';\nimport { axiosInstance } from '../api/axios';\nimport { MyContext } from '../contextAPI/UserContext';\nimport axios from 'axios';\nconst Portfolio = () => {\n    const [holdings, setHoldings] = useState([])\n    const { user, coins } = useContext(MyContext)\n    const [total, setTotal] = useState(null)\n    const [res, setRes] = useState(null)\n    const [mergedArr, setMergedArr] = useState(null)\n    const [display, setDisplay] = useState(false)\n    // const myArrayFilter = coins.filter(coin => {\n    //     return holdings.some(holding => {\n    //         return holding.name === coin.name\n    //     })\n    // })\n\n    const createTotal = (arr) => {\n        let total = 0\n        arr.map((el) => (total += el.quantity * el.current_price))\n        return total\n\n    }\n\n    // console.log(coins)\n    useEffect(() => {\n        async function getData() {\n            try {\n                let { data } = await axiosInstance.get(`/portfolio/`, {\n                    params: {\n                        id: 1\n                    }\n                })\n                setHoldings(data)\n                let str = \"\"\n                data.map((e, i) => {\n                    if (i !== data.length - 1) {\n                        str += e.name.toLowerCase() + \"%2C%20\"\n                    } else {\n                        str += e.name.toLowerCase()\n                    }\n                })\n\n                let res = await axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=${str}`)\n\n                setRes(res.data)\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        getData()\n    }, [])\n\n    // const myArrayFilter = coins.filter(coin => {\n    //     return holdings.some(holding => {\n    //         return holding.name === coin.name\n    //     })\n    // })\n\n    const click = () => {\n        console.log(res)\n        console.log(holdings)\n        const a3 = res.map(t1 => ({ ...t1, ...holdings.find(t2 => t2.name === t1.name) }))\n        setMergedArr(a3)\n        setDisplay(true)\n    }\n\n    const calculateSum = () => {\n        // const a3 = res.map(t1 => ({ ...t1, ...holdings.find(t2 => t2.name === t1.name) }))\n        // setMergedArr(a3)\n        let sum = mergedArr.reduce((a, b) => a + (b.quantity * parseFloat(b.current_price)), 0)\n        setTotal(sum.toFixed(2))\n    }\n\n    useEffect(() => {\n\n        if (display === false) {\n            console.log(mergedArr)\n            console.log('inside useeffect -- false')\n        }\n\n        if (display === true) {\n            console.log(mergedArr)\n            console.log('inside useeffect -- true')\n            calculateSum()\n\n        }\n    }, [mergedArr])\n\n    return (\n        <>\n\n            {holdings && (\n\n                <div>\n                    <button onClick={click}>Click m1e1</button>\n                    <button onClick={click2}>Click me</button>\n                    {/* <pre>{JSON.stringify(holdings, null, 2)}</pre> */}\n                    {\n                        total && <h1>${total}</h1>\n                    }\n\n                    <h1>Portfolio COmponent </h1>\n                    {holdings?.map((holding, i) => (\n                        <CoinRow\n                            key={i}\n                            name={holding.name}\n                            symbol={holding.symbol}\n                            quantity={holding.quantity}\n                            image={holding.image_url}\n                            id={holding.id}\n                            user_id={holding.user}\n                            holdings={holdings}\n                            setHoldings={setHoldings}\n                        />\n                    ))}\n\n                </div >\n            )}\n        </>\n    )\n}\n\nexport default Portfolio\n"]},"metadata":{},"sourceType":"module"}