{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/frontend/src/components/Portfolio.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport CoinRow from './portfolio/CoinRow';\nimport { axiosInstance } from '../api/axios';\nimport { MyContext } from '../contextAPI/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Portfolio = () => {\n  _s();\n\n  const [holdings, setHoldings] = useState([]);\n  const {\n    user,\n    coins\n  } = useContext(MyContext);\n  const {\n    total,\n    setTotal\n  } = useState(null);\n  const [test, setTest] = useState({\n    charles: \"me\",\n    patrick: \"pat\"\n  }); // const myArrayFilter = coins.filter(coin => {\n  //     return holdings.some(holding => {\n  //         return holding.name === coin.name\n  //     })\n  // })\n  // useEffect(() => {\n  //     const myArrayFilter = coins.filter(coin => {\n  //         return holdings.some(holding => {\n  //             return holding.name === coin.name\n  //         })\n  //     })\n  //     setTotal(myArrayFilter)\n  // }, [holdings])\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        let {\n          data\n        } = await axiosInstance.get(`/portfolio/`, {\n          params: {\n            id: 1\n          }\n        });\n        setHoldings(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getData();\n  }, []); // const myArrayFilter = coins.filter(coin => {\n  //     return holdings.some(holding => {\n  //         return holding.name === coin.name\n  //     })\n  // })\n\n  const click = () => {\n    console.log(holdings);\n    setHoldings({ ...holdings,\n      \"testing\": 1234\n    }); // console.log(coins)\n  };\n\n  const click2 = () => {\n    console.log(holdings);\n  }; // console.log(myArrayFilter)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(holdings, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Portfolio COmponent \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), holdings === null || holdings === void 0 ? void 0 : holdings.map((holding, i) => /*#__PURE__*/_jsxDEV(CoinRow, {\n      name: holding.name,\n      symbol: holding.symbol,\n      quantity: holding.quantity,\n      image: holding.image_url\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: click,\n      children: \"Click m1e1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: click2,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Portfolio, \"d9xTRAWQu/JdUfP7t5evplxRIIs=\");\n\n_c = Portfolio;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/frontend/src/components/Portfolio.js"],"names":["React","useEffect","useState","useContext","CoinRow","axiosInstance","MyContext","Portfolio","holdings","setHoldings","user","coins","total","setTotal","test","setTest","charles","patrick","getData","data","get","params","id","error","console","log","click","click2","JSON","stringify","map","holding","i","name","symbol","quantity","image_url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,QAA0B,2BAA1B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBR,UAAU,CAACG,SAAD,CAAlC;AACA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAAEc,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GAAD,CAAhC,CAJoB,CAMpB;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeiB,OAAf,GAAyB;AACrB,UAAI;AACA,YAAI;AAAEC,UAAAA;AAAF,YAAW,MAAMd,aAAa,CAACe,GAAd,CAAmB,aAAnB,EAAiC;AAClDC,UAAAA,MAAM,EAAE;AACJC,YAAAA,EAAE,EAAE;AADA;AAD0C,SAAjC,CAArB;AAKAb,QAAAA,WAAW,CAACU,IAAD,CAAX;AACH,OAPD,CAOE,OAAOI,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AACDL,IAAAA,OAAO;AACV,GAdQ,EAcN,EAdM,CAAT,CAvBoB,CAuCpB;AACA;AACA;AACA;AACA;;AAEA,QAAMQ,KAAK,GAAG,MAAM;AAEhBF,IAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AACAC,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,iBAAW;AAA1B,KAAD,CAAX,CAHgB,CAIhB;AACH,GALD;;AAOA,QAAMmB,MAAM,GAAG,MAAM;AACjBH,IAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AAEH,GAHD,CApDoB,CAyDpB;;;AAEA,sBACI;AAAA,4BACI;AAAA,gBAAMoB,IAAI,CAACC,SAAL,CAAerB,QAAf,EAAyB,IAAzB,EAA+B,CAA/B;AAAN;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKI;AAAL;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAIKJ,QAJL,aAIKA,QAJL,uBAIKA,QAAQ,CAAEsB,GAAV,CAAc,CAACC,OAAD,EAAUC,CAAV,kBACX,QAAC,OAAD;AAEI,MAAA,IAAI,EAAED,OAAO,CAACE,IAFlB;AAGI,MAAA,MAAM,EAAEF,OAAO,CAACG,MAHpB;AAII,MAAA,QAAQ,EAAEH,OAAO,CAACI,QAJtB;AAKI,MAAA,KAAK,EAAEJ,OAAO,CAACK;AALnB,OACSJ,CADT;AAAA;AAAA;AAAA;AAAA,YADH,CAJL,eAaI;AAAQ,MAAA,OAAO,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAcI;AAAQ,MAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA9ED;;GAAMpB,S;;KAAAA,S;AAgFN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport CoinRow from './portfolio/CoinRow';\nimport { axiosInstance } from '../api/axios';\nimport { MyContext } from '../contextAPI/UserContext';\n\nconst Portfolio = () => {\n    const [holdings, setHoldings] = useState([])\n    const { user, coins } = useContext(MyContext)\n    const { total, setTotal } = useState(null)\n    const [test, setTest] = useState({ charles: \"me\", patrick: \"pat\" })\n\n    // const myArrayFilter = coins.filter(coin => {\n    //     return holdings.some(holding => {\n    //         return holding.name === coin.name\n    //     })\n    // })\n\n\n    // useEffect(() => {\n    //     const myArrayFilter = coins.filter(coin => {\n    //         return holdings.some(holding => {\n    //             return holding.name === coin.name\n    //         })\n    //     })\n\n    //     setTotal(myArrayFilter)\n    // }, [holdings])\n\n    useEffect(() => {\n        async function getData() {\n            try {\n                let { data } = await axiosInstance.get(`/portfolio/`, {\n                    params: {\n                        id: 1\n                    }\n                })\n                setHoldings(data)\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        getData()\n    }, [])\n\n    // const myArrayFilter = coins.filter(coin => {\n    //     return holdings.some(holding => {\n    //         return holding.name === coin.name\n    //     })\n    // })\n\n    const click = () => {\n\n        console.log(holdings)\n        setHoldings({ ...holdings, \"testing\": 1234 })\n        // console.log(coins)\n    }\n\n    const click2 = () => {\n        console.log(holdings)\n\n    }\n\n    // console.log(myArrayFilter)\n\n    return (\n        <div>\n            <pre>{JSON.stringify(holdings, null, 2)}</pre>\n            <h1>{total}</h1>\n            <h1>Portfolio COmponent </h1>\n            {holdings?.map((holding, i) => (\n                <CoinRow\n                    key={i}\n                    name={holding.name}\n                    symbol={holding.symbol}\n                    quantity={holding.quantity}\n                    image={holding.image_url}\n                />\n            ))}\n            <button onClick={click}>Click m1e1</button>\n            <button onClick={click2}>Click me</button>\n\n        </div >\n    )\n}\n\nexport default Portfolio\n"]},"metadata":{},"sourceType":"module"}