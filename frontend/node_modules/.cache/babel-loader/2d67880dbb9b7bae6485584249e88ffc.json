{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/src/components/ChartData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport Chartjs from 'chart.js/auto';\nimport { historyOptions } from '../chart/chartconfig'; // ChartJS.Chart.register.apply(\n//     null,\n//     Object.values(Chartjs).filter((chartClass) => chartClass.id)\n//   );\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartData = () => {\n  _s();\n\n  const chartRef = useRef();\n  useEffect(() => {\n    if (chartRef && chartRef.current) {\n      const chartInstance = new Chartjs(chartRef.current, {\n        type: 'line',\n        data: {\n          // labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n          datasets: [{\n            label: '# of Votes',\n            data: [{\n              x: 1,\n              y: 15\n            }, {\n              x: 2,\n              y: 12\n            }, {\n              x: 3,\n              y: 25\n            }],\n            backgroundColor: \"rgba(174, 305, 194, 0.5)\",\n            borderColor: \"rgba(173, 305, 194, 0.4\",\n            pointRadius: 0\n          }]\n        },\n        options: historyOptions\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      id: \"chart\",\n      width: 250,\n      height: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChartData, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n\n_c = ChartData;\nexport default ChartData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartData\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/src/components/ChartData.js"],"names":["React","useRef","useEffect","Chartjs","historyOptions","ChartData","chartRef","current","chartInstance","type","data","datasets","label","x","y","backgroundColor","borderColor","pointRadius","options"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,cAAT,QAA+B,sBAA/B,C,CAEA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGL,MAAM,EAAvB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAII,QAAQ,IAAIA,QAAQ,CAACC,OAAzB,EAAkC;AAC9B,YAAMC,aAAa,GAAG,IAAIL,OAAJ,CAAYG,QAAQ,CAACC,OAArB,EAA8B;AAChDE,QAAAA,IAAI,EAAE,MAD0C;AAEhDC,QAAAA,IAAI,EAAE;AACF;AACAC,UAAAA,QAAQ,EAAE,CAAC;AACPC,YAAAA,KAAK,EAAE,YADA;AAEPF,YAAAA,IAAI,EAAE,CACF;AAAEG,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,CAAC,EAAE;AAAX,aADE,EAEF;AAAED,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,CAAC,EAAE;AAAX,aAFE,EAGF;AAAED,cAAAA,CAAC,EAAE,CAAL;AAAQC,cAAAA,CAAC,EAAE;AAAX,aAHE,CAFC;AAOPC,YAAAA,eAAe,EAAE,0BAPV;AAQPC,YAAAA,WAAW,EAAE,yBARN;AASPC,YAAAA,WAAW,EAAE;AATN,WAAD;AAFR,SAF0C;AAgBhDC,QAAAA,OAAO,EAAEd;AAhBuC,OAA9B,CAAtB;AAkBH;AACJ,GArBQ,CAAT;AAsBA,sBACI;AAAA,2BACI;AAAQ,MAAA,GAAG,EAAEE,QAAb;AAAuB,MAAA,EAAE,EAAC,OAA1B;AAAkC,MAAA,KAAK,EAAE,GAAzC;AAA8C,MAAA,MAAM,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA9BD;;GAAMD,S;;KAAAA,S;AAgCN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport Chartjs from 'chart.js/auto';\nimport { historyOptions } from '../chart/chartconfig';\n\n// ChartJS.Chart.register.apply(\n//     null,\n//     Object.values(Chartjs).filter((chartClass) => chartClass.id)\n//   );\n\nconst ChartData = () => {\n    const chartRef = useRef()\n\n    useEffect(() => {\n        if (chartRef && chartRef.current) {\n            const chartInstance = new Chartjs(chartRef.current, {\n                type: 'line',\n                data: {\n                    // labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n                    datasets: [{\n                        label: '# of Votes',\n                        data: [\n                            { x: 1, y: 15 },\n                            { x: 2, y: 12 },\n                            { x: 3, y: 25 },\n                        ],\n                        backgroundColor: \"rgba(174, 305, 194, 0.5)\",\n                        borderColor: \"rgba(173, 305, 194, 0.4\",\n                        pointRadius: 0,\n                    }]\n                },\n                options: historyOptions\n            })\n        }\n    })\n    return (\n        <div>\n            <canvas ref={chartRef} id=\"chart\" width={250} height={250}></canvas>\n        </div>\n    )\n}\n\nexport default ChartData\n"]},"metadata":{},"sourceType":"module"}