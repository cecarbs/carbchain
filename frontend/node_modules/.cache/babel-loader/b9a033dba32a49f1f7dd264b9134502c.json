{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/src/components/ChartData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport Chartjs from 'chart.js';\nimport { historyOptions } from '../chart/chartconfig';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartData = ({\n  data\n}) => {\n  _s();\n\n  const chartRef = useRef();\n  const {\n    day\n  } = data;\n  useEffect(() => {\n    if (chartRef && chartRef.current && detail) {\n      const chartInstance = new Chartjs(chartRef.current, {\n        type: 'line',\n        data: {\n          // labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n          datasets: [{\n            label: `${detail.name}`,\n            data: day,\n            backgroundColor: \"rgba(174, 305, 194, 0.5)\",\n            borderColor: \"rgba(173, 305, 194, 0.4\",\n            pointRadius: 0\n          }]\n        },\n        options: {\n          historyOptions\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef,\n      id: \"chart\",\n      width: 250,\n      height: 250\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChartData, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n\n_c = ChartData;\nexport default ChartData;\nconst ChartContainer = styled.div`\n    padding: 3rem;\n    margin: 2rem;\n`;\n_c2 = ChartContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChartData\");\n$RefreshReg$(_c2, \"ChartContainer\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/src/components/ChartData.js"],"names":["React","useRef","useEffect","Chartjs","historyOptions","styled","ChartData","data","chartRef","day","current","detail","chartInstance","type","datasets","label","name","backgroundColor","borderColor","pointRadius","options","ChartContainer","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC1B,QAAMC,QAAQ,GAAGP,MAAM,EAAvB;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAQF,IAAd;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,QAAQ,IAAIA,QAAQ,CAACE,OAArB,IAAgCC,MAApC,EAA4C;AACxC,YAAMC,aAAa,GAAG,IAAIT,OAAJ,CAAYK,QAAQ,CAACE,OAArB,EAA8B;AAChDG,QAAAA,IAAI,EAAE,MAD0C;AAEhDN,QAAAA,IAAI,EAAE;AACF;AACAO,UAAAA,QAAQ,EAAE,CAAC;AACPC,YAAAA,KAAK,EAAG,GAAEJ,MAAM,CAACK,IAAK,EADf;AAEPT,YAAAA,IAAI,EAAEE,GAFC;AAGPQ,YAAAA,eAAe,EAAE,0BAHV;AAIPC,YAAAA,WAAW,EAAE,yBAJN;AAKPC,YAAAA,WAAW,EAAE;AALN,WAAD;AAFR,SAF0C;AAYhDC,QAAAA,OAAO,EAAE;AACLhB,UAAAA;AADK;AAZuC,OAA9B,CAAtB;AAgBH;AACJ,GAnBQ,CAAT;AAoBA,sBACI,QAAC,cAAD;AAAA,2BACI;AAAQ,MAAA,GAAG,EAAEI,QAAb;AAAuB,MAAA,EAAE,EAAC,OAA1B;AAAkC,MAAA,KAAK,EAAE,GAAzC;AAA8C,MAAA,MAAM,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5BD;;GAAMF,S;;KAAAA,S;AA8BN,eAAeA,SAAf;AAEA,MAAMe,cAAc,GAAGhB,MAAM,CAACiB,GAAI;AAClC;AACA;AACA,CAHA;MAAMD,c","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport Chartjs from 'chart.js';\nimport { historyOptions } from '../chart/chartconfig';\nimport styled from 'styled-components';\n\nconst ChartData = ({data}) => {\n    const chartRef = useRef()\n    const {day} = data\n    useEffect(() => {\n        if (chartRef && chartRef.current && detail) {\n            const chartInstance = new Chartjs(chartRef.current, {\n                type: 'line',\n                data: {\n                    // labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n                    datasets: [{\n                        label: `${detail.name}`,\n                        data: day,\n                        backgroundColor: \"rgba(174, 305, 194, 0.5)\",\n                        borderColor: \"rgba(173, 305, 194, 0.4\",\n                        pointRadius: 0,\n                    },]\n                },\n                options: {\n                    historyOptions,\n                },\n            })\n        }\n    })\n    return (\n        <ChartContainer>\n            <canvas ref={chartRef} id=\"chart\" width={250} height={250}></canvas>\n        </ChartContainer>\n    )\n}\n\nexport default ChartData\n\nconst ChartContainer = styled.div`\n    padding: 3rem;\n    margin: 2rem;\n`"]},"metadata":{},"sourceType":"module"}