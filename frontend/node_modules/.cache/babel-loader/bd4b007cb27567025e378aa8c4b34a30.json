{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/frontend/src/pages/Detail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { coinGecko } from '../api/axios';\nimport axios from 'axios';\nimport PlotData from '../components/crypto/PlotData';\nimport CoinData from '../components/crypto/CoinData';\nimport { motion } from 'framer-motion';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Detail = ({\n  pathId\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [coinInfo, setCoinInfo] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  let history = useHistory();\n  let urlPath = `coins/${id}/market_chart`;\n  console.log(pathId);\n\n  const exitDetailHandler = e => {\n    const element = e.target;\n\n    if (element.classList.contains(\"shadow\")) {\n      document.body.style.overflow = \"auto\";\n      history.push(\"/cryptocurrencies\");\n    }\n  };\n\n  const formatData = data => {\n    return data.map(el => {\n      return {\n        t: el[0],\n        y: el[1].toFixed(2)\n      };\n    });\n  };\n\n  useEffect(() => {\n    async function getData() {\n      setIsLoading(true);\n      const [day, month, year, detail] = await axios.all([coinGecko.get(urlPath, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"1\"\n        }\n      }), coinGecko.get(urlPath, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"30\"\n        }\n      }), coinGecko.get(urlPath, {\n        params: {\n          vs_currency: \"usd\",\n          days: \"365\"\n        }\n      }), coinGecko.get('/coins/markets/', {\n        params: {\n          vs_currency: \"usd\",\n          ids: id\n        }\n      })]);\n      setCoinInfo({\n        day: formatData(day.data.prices),\n        month: formatData(month.data.prices),\n        year: formatData(year.data.prices),\n        detail: detail.data[0]\n      });\n      setIsLoading(false);\n    }\n\n    getData();\n  }, [urlPath, id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoading && /*#__PURE__*/_jsxDEV(CardShadow, {\n      className: \"shadow\",\n      onClick: exitDetailHandler,\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      exit: {\n        opacity: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(CoinDetail, {\n        children: [/*#__PURE__*/_jsxDEV(PlotData, {\n          data: coinInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CoinData, {\n          data: coinInfo.detail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Detail, \"0VQHmjFGhRO8kuk08jDdARKSelo=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Detail;\nexport default Detail;\nconst CardShadow = styled(motion.div)`\n  width: 100%;\n  min-height: 100vh;\n  overflow-y: scroll;\n  background: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 5;\n  &::-webkit-scrollbar {\n    width: 0.5rem;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: #ff7676;\n  }\n  &::-webkit-scrollbar-track {\n    background: white;\n  }\n`;\n_c2 = CardShadow;\nconst CoinDetail = styled(motion.div)`\n  width: 50%;\n  border-radius: 1rem;\n  padding: 2rem 5rem;\n  background: white;\n  position: absolute;\n  left: 20%;\n  top: 5%;\n  color: black;\n  z-index: 10;\n  img {\n    width: 100%;\n  }\n`;\n_c3 = CoinDetail;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Detail\");\n$RefreshReg$(_c2, \"CardShadow\");\n$RefreshReg$(_c3, \"CoinDetail\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/frontend/src/pages/Detail.js"],"names":["React","useEffect","useState","useParams","coinGecko","axios","PlotData","CoinData","motion","useHistory","styled","Detail","pathId","id","coinInfo","setCoinInfo","isLoading","setIsLoading","history","urlPath","console","log","exitDetailHandler","e","element","target","classList","contains","document","body","style","overflow","push","formatData","data","map","el","t","y","toFixed","getData","day","month","year","detail","all","get","params","vs_currency","days","ids","prices","opacity","CardShadow","div","CoinDetail"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAASV,SAAS,EAAxB;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,MAAIgB,OAAO,GAAGT,UAAU,EAAxB;AAEA,MAAIU,OAAO,GAAI,SAAQN,EAAG,eAA1B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;;AACA,QAAMU,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,UAAMC,OAAO,GAAGD,CAAC,CAACE,MAAlB;;AACA,QAAID,OAAO,CAACE,SAAR,CAAkBC,QAAlB,CAA2B,QAA3B,CAAJ,EAA0C;AACtCC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,MAA/B;AACAb,MAAAA,OAAO,CAACc,IAAR,CAAa,mBAAb;AACH;AACJ,GAND;;AAQA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AACzB,WAAOA,IAAI,CAACC,GAAL,CAASC,EAAE,IAAI;AAClB,aAAO;AACHC,QAAAA,CAAC,EAAED,EAAE,CAAC,CAAD,CADF;AAEHE,QAAAA,CAAC,EAAEF,EAAE,CAAC,CAAD,CAAF,CAAMG,OAAN,CAAc,CAAd;AAFA,OAAP;AAIH,KALM,CAAP;AAMH,GAPD;;AASAtC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeuC,OAAf,GAAyB;AACrBvB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAM,CAACwB,GAAD,EAAMC,KAAN,EAAaC,IAAb,EAAmBC,MAAnB,IAA6B,MAAMvC,KAAK,CAACwC,GAAN,CAAU,CAC/CzC,SAAS,CAAC0C,GAAV,CAAc3B,OAAd,EAAuB;AACnB4B,QAAAA,MAAM,EAAE;AACJC,UAAAA,WAAW,EAAE,KADT;AAEJC,UAAAA,IAAI,EAAE;AAFF;AADW,OAAvB,CAD+C,EAO/C7C,SAAS,CAAC0C,GAAV,CAAc3B,OAAd,EAAuB;AACnB4B,QAAAA,MAAM,EAAE;AACJC,UAAAA,WAAW,EAAE,KADT;AAEJC,UAAAA,IAAI,EAAE;AAFF;AADW,OAAvB,CAP+C,EAa/C7C,SAAS,CAAC0C,GAAV,CAAc3B,OAAd,EAAuB;AACnB4B,QAAAA,MAAM,EAAE;AACJC,UAAAA,WAAW,EAAE,KADT;AAEJC,UAAAA,IAAI,EAAE;AAFF;AADW,OAAvB,CAb+C,EAmB/C7C,SAAS,CAAC0C,GAAV,CAAc,iBAAd,EAAiC;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,WAAW,EAAE,KAAf;AAAsBE,UAAAA,GAAG,EAAErC;AAA3B;AAAV,OAAjC,CAnB+C,CAAV,CAAzC;AAsBAE,MAAAA,WAAW,CAAC;AACR0B,QAAAA,GAAG,EAAER,UAAU,CAACQ,GAAG,CAACP,IAAJ,CAASiB,MAAV,CADP;AAERT,QAAAA,KAAK,EAAET,UAAU,CAACS,KAAK,CAACR,IAAN,CAAWiB,MAAZ,CAFT;AAGRR,QAAAA,IAAI,EAAEV,UAAU,CAACU,IAAI,CAACT,IAAL,CAAUiB,MAAX,CAHR;AAIRP,QAAAA,MAAM,EAAEA,MAAM,CAACV,IAAP,CAAY,CAAZ;AAJA,OAAD,CAAX;AAMAjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AACDuB,IAAAA,OAAO;AAEV,GAnCQ,EAmCN,CAACrB,OAAD,EAAUN,EAAV,CAnCM,CAAT;AAqCA,sBACI;AAAA,cAcK,CAACG,SAAD,iBACG,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,QAAtB;AAA+B,MAAA,OAAO,EAAEM,iBAAxC;AACI,MAAA,OAAO,EAAE;AAAE8B,QAAAA,OAAO,EAAE;AAAX,OADb;AAEI,MAAA,OAAO,EAAE;AAAEA,QAAAA,OAAO,EAAE;AAAX,OAFb;AAGI,MAAA,IAAI,EAAE;AAAEA,QAAAA,OAAO,EAAE;AAAX,OAHV;AAAA,6BAKI,QAAC,UAAD;AAAA,gCACI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEtC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,QAAQ,CAAC8B;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AAfR,mBADJ;AA8BH,CA5FD;;GAAMjC,M;UACaR,S,EAGDM,U;;;KAJZE,M;AA8FN,eAAeA,MAAf;AAEA,MAAM0C,UAAU,GAAG3C,MAAM,CAACF,MAAM,CAAC8C,GAAR,CAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMD,U;AAoBN,MAAME,UAAU,GAAG7C,MAAM,CAACF,MAAM,CAAC8C,GAAR,CAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMC,U","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { coinGecko } from '../api/axios';\nimport axios from 'axios';\nimport PlotData from '../components/crypto/PlotData';\nimport CoinData from '../components/crypto/CoinData';\nimport { motion } from 'framer-motion'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst Detail = ({ pathId }) => {\n    const { id } = useParams()\n    const [coinInfo, setCoinInfo] = useState({})\n    const [isLoading, setIsLoading] = useState(false)\n    let history = useHistory()\n\n    let urlPath = `coins/${id}/market_chart`\n    console.log(pathId)\n    const exitDetailHandler = (e) => {\n        const element = e.target;\n        if (element.classList.contains(\"shadow\")) {\n            document.body.style.overflow = \"auto\";\n            history.push(\"/cryptocurrencies\");\n        }\n    };\n\n    const formatData = (data) => {\n        return data.map(el => {\n            return {\n                t: el[0],\n                y: el[1].toFixed(2)\n            }\n        })\n    }\n\n    useEffect(() => {\n        async function getData() {\n            setIsLoading(true);\n            const [day, month, year, detail] = await axios.all([\n                coinGecko.get(urlPath, {\n                    params: {\n                        vs_currency: \"usd\",\n                        days: \"1\",\n                    }\n                }),\n                coinGecko.get(urlPath, {\n                    params: {\n                        vs_currency: \"usd\",\n                        days: \"30\",\n                    }\n                }),\n                coinGecko.get(urlPath, {\n                    params: {\n                        vs_currency: \"usd\",\n                        days: \"365\"\n                    }\n                }),\n                coinGecko.get('/coins/markets/', { params: { vs_currency: \"usd\", ids: id } })\n            ])\n\n            setCoinInfo({\n                day: formatData(day.data.prices),\n                month: formatData(month.data.prices),\n                year: formatData(year.data.prices),\n                detail: detail.data[0]\n            });\n            setIsLoading(false)\n        }\n        getData()\n\n    }, [urlPath, id])\n\n    return (\n        <>\n            {/* {isLoading ? (\n                <>\n                    <h1>Loading...</h1>\n                </>\n            ) : (\n                <CardShadow className=\"shadow\" onClick={exitDetailHandler}>\n                    <CoinDetail>\n\n                        <PlotData data={coinInfo} />\n                        <CoinData data={coinInfo.detail} />\n                    </CoinDetail>\n                </CardShadow>\n            )} */}\n            {!isLoading && (\n                <CardShadow className=\"shadow\" onClick={exitDetailHandler}\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                >\n                    <CoinDetail>\n                        <PlotData data={coinInfo} />\n                        <CoinData data={coinInfo.detail} />\n                    </CoinDetail>\n                </CardShadow>\n            )\n            }\n        </>\n    )\n}\n\nexport default Detail\n\nconst CardShadow = styled(motion.div)`\n  width: 100%;\n  min-height: 100vh;\n  overflow-y: scroll;\n  background: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 5;\n  &::-webkit-scrollbar {\n    width: 0.5rem;\n  }\n  &::-webkit-scrollbar-thumb {\n    background-color: #ff7676;\n  }\n  &::-webkit-scrollbar-track {\n    background: white;\n  }\n`;\n\nconst CoinDetail = styled(motion.div)`\n  width: 50%;\n  border-radius: 1rem;\n  padding: 2rem 5rem;\n  background: white;\n  position: absolute;\n  left: 20%;\n  top: 5%;\n  color: black;\n  z-index: 10;\n  img {\n    width: 100%;\n  }\n`;"]},"metadata":{},"sourceType":"module"}