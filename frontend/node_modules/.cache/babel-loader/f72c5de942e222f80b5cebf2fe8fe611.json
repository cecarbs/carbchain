{"ast":null,"code":"var _jsxFileName = \"/Users/charles/Desktop/Projects/carbcoin/frontend/src/components/crypto/CryptoData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { coinGecko } from '../../api/axios';\nimport Coin from './Coin';\nimport styled from 'styled-components';\nimport { MyContext } from '../../contextAPI/UserContext';\nimport Detail from '../../pages/Detail';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CryptoData = () => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const {\n    coins,\n    setCoins\n  } = useContext(MyContext);\n  const location = useLocation();\n  let pathId = location.pathname.split(\"/\")[2];\n\n  const getData = async () => {\n    try {\n      let {\n        data\n      } = await coinGecko.get(\"/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\");\n      setCoins(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n    const id = setInterval(getData, 60000);\n    return () => clearInterval(id);\n  }, []);\n  const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()));\n\n  const onChangeHandler = e => {\n    setSearch(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"form\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"search\",\n          placeHolder: \"filter your search\",\n          className: \"form__input\",\n          type: \"text\",\n          onChange: onChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CoinList, {\n      children: [/*#__PURE__*/_jsxDEV(Detail, {\n        pathId: pathId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), filteredCoins.map(coin => {\n        return /*#__PURE__*/_jsxDEV(Coin, {\n          id: coin.id,\n          name: coin.name,\n          image: coin.image,\n          symbol: coin.symbol,\n          volume: coin.market_cap,\n          price: coin.current_price,\n          priceChange: coin.price_change_percentage_24h\n        }, coin.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoData, \"J93P5H+EoiqKsO3lVZ7ByoK3FTw=\", false, function () {\n  return [useLocation];\n});\n\n_c = CryptoData;\nexport default CryptoData;\nconst FormContainer = styled.div`\n  form {\n    padding-top: 5rem;\n    padding-bottom: 2rem;\n\n    input {\n      border-radius: 4px ;\n      border: 1px solid gray;\n      /* height: 20px; */\n      width: 15rem;\n      margin-bottom: 1rem;\n      padding: 8px;\n      \n      &:focus {\n        outline: none;\n      }\n\n      &::placeholder {\n        font-style: italic;\n      }\n    }\n      button {\n        padding: 8px;\n        width: 4rem;\n        border-radius: 0 4px 4px 0;\n        border: 1px solid gray;\n        border-left: none;\n        background-color: #00a9a5;\n        color: white;\n\n        &:hover {\n          cursor: pointer;\n          background: #092327;\n        }\n    }\n  }\n`;\n_c2 = FormContainer;\nconst CoinList = styled.div`\n  padding-bottom: 10rem;\n`;\n_c3 = CoinList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CryptoData\");\n$RefreshReg$(_c2, \"FormContainer\");\n$RefreshReg$(_c3, \"CoinList\");","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/frontend/src/components/crypto/CryptoData.js"],"names":["React","useState","useEffect","useContext","coinGecko","Coin","styled","MyContext","Detail","useLocation","CryptoData","search","setSearch","coins","setCoins","location","pathId","pathname","split","getData","data","get","error","console","log","id","setInterval","clearInterval","filteredCoins","filter","coin","name","toLowerCase","includes","onChangeHandler","e","target","value","map","image","symbol","market_cap","current_price","price_change_percentage_24h","FormContainer","div","CoinList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { coinGecko } from '../../api/axios';\nimport Coin from './Coin';\nimport styled from 'styled-components';\nimport { MyContext } from '../../contextAPI/UserContext';\nimport Detail from '../../pages/Detail';\nimport { useLocation } from 'react-router-dom'\n\nconst CryptoData = () => {\n  const [search, setSearch] = useState(\"\")\n  const { coins, setCoins } = useContext(MyContext)\n  const location = useLocation()\n  let pathId = location.pathname.split(\"/\")[2]\n\n  const getData = async () => {\n    try {\n      let { data } = await coinGecko.get(\"/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\")\n      setCoins(data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    getData()\n\n    const id = setInterval(getData, 60000)\n\n    return () => clearInterval(id)\n  }, [])\n\n  const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()))\n\n  const onChangeHandler = (e) => {\n    setSearch(e.target.value)\n  }\n\n  return (\n    <div>\n      <FormContainer>\n        <form class=\"form\">\n          <input name=\"search\" placeHolder=\"filter your search\" className=\"form__input\" type=\"text\" onChange={onChangeHandler}></input>\n        </form>\n      </FormContainer>\n      <CoinList>\n        <Detail pathId={pathId} />\n        {filteredCoins.map(coin => {\n          return (\n            <Coin key={coin.id}\n              id={coin.id}\n              name={coin.name}\n              image={coin.image}\n              symbol={coin.symbol}\n              volume={coin.market_cap}\n              price={coin.current_price}\n              priceChange={coin.price_change_percentage_24h}\n            />\n          )\n        })}\n      </CoinList>\n    </div>\n  )\n}\n\nexport default CryptoData\n\n\nconst FormContainer = styled.div`\n  form {\n    padding-top: 5rem;\n    padding-bottom: 2rem;\n\n    input {\n      border-radius: 4px ;\n      border: 1px solid gray;\n      /* height: 20px; */\n      width: 15rem;\n      margin-bottom: 1rem;\n      padding: 8px;\n      \n      &:focus {\n        outline: none;\n      }\n\n      &::placeholder {\n        font-style: italic;\n      }\n    }\n      button {\n        padding: 8px;\n        width: 4rem;\n        border-radius: 0 4px 4px 0;\n        border: 1px solid gray;\n        border-left: none;\n        background-color: #00a9a5;\n        color: white;\n\n        &:hover {\n          cursor: pointer;\n          background: #092327;\n        }\n    }\n  }\n`\n\nconst CoinList = styled.div`\n  padding-bottom: 10rem;\n`"]},"metadata":{},"sourceType":"module"}