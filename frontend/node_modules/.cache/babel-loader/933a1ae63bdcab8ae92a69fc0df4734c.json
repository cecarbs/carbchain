{"ast":null,"code":"import axios from 'axios';\nexport const coinGecko = axios.create({\n  baseURL: \"https://api.coingecko.com/api/v3\"\n});\nexport const testing = axios.create({\n  baseURL: \"https://api.coingecko.com/api/v3\",\n  params: {\n    vs_currency: \"usd\",\n    days: \"1\"\n  }\n});\nexport const axiosInstance = axios.create({\n  baseURL: \"http://localhost:8000/api/\",\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem('access_token') ? 'JWT ' + localStorage.getItem('access_token') : null,\n    'Content-Type': 'application/json',\n    accept: 'application/json'\n  }\n});","map":{"version":3,"sources":["/Users/charles/Desktop/Projects/carbcoin/frontend/src/api/axios.js"],"names":["axios","coinGecko","create","baseURL","testing","params","vs_currency","days","axiosInstance","timeout","headers","Authorization","localStorage","getItem","accept"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAClCC,EAAAA,OAAO,EAAE;AADyB,CAAb,CAAlB;AAIP,OAAO,MAAMC,OAAO,GAAGJ,KAAK,CAACE,MAAN,CAAa;AAChCC,EAAAA,OAAO,EAAE,kCADuB;AAEhCE,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE,KADT;AAEJC,IAAAA,IAAI,EAAE;AAFF;AAFwB,CAAb,CAAhB;AAQP,OAAO,MAAMC,aAAa,GAAGR,KAAK,CAACE,MAAN,CAAa;AACtCC,EAAAA,OAAO,EAAE,4BAD6B;AAEtCM,EAAAA,OAAO,EAAE,IAF6B;AAGtCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,cAArB,IACT,SAASD,YAAY,CAACC,OAAb,CAAqB,cAArB,CADA,GAET,IAHD;AAIL,oBAAgB,kBAJX;AAKLC,IAAAA,MAAM,EAAE;AALH;AAH6B,CAAb,CAAtB","sourcesContent":["import axios from 'axios';\n\nexport const coinGecko = axios.create({\n    baseURL: \"https://api.coingecko.com/api/v3\"\n})\n\nexport const testing = axios.create({\n    baseURL: \"https://api.coingecko.com/api/v3\",\n    params: {\n        vs_currency: \"usd\",\n        days: \"1\"\n    }\n})\n\nexport const axiosInstance = axios.create({\n    baseURL: \"http://localhost:8000/api/\",\n    timeout: 5000,\n    headers: {\n        Authorization: localStorage.getItem('access_token')\n            ? 'JWT ' + localStorage.getItem('access_token')\n            : null,\n        'Content-Type': 'application/json',\n        accept: 'application/json'\n    }\n})\n"]},"metadata":{},"sourceType":"module"}